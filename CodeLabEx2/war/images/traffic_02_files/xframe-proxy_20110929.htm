
<!-- saved from url=(1032)http://prod1.rest-notify.msg.yahoo.com/v2/xframe/xframe-proxy_20110929.html?bc#main_27tbxzc02fpc**http://3cp9lcoq32dpn-c.c.yom.mail.yahoo.com/om/api/1.0/openmail.app.invoke/3cp9lcoq32dpn/77/1.0.35/us/en-US/messenger.html/0*msg_y4*y=http://mail.yimg.com/zz/combo?nq/4854/yui/yui-min.js&nq/4854/oop/oop-min.js&nq/4854/dom/dom-min.js&nq/4854/event/event-min.js&nq/4854/event-custom/event-custom-min.js&nq/4854/base/base-base-min.js&nq/4854/plugin/plugin-min.js&nq/4854/pluginhost/pluginhost-min.js&nq/4854/node/node-min.js&nq/4854/attribute/attribute-min.js&nq/4854/json/json-min.js&nq/4854/intl/intl-min.js&nq/4854/datatype/lang/datatype-date.js&nq/4854/datatype/datatype-date-min.js&nq/4854/datatype/datatype-xml-min.js&nq/4854/cookie/cookie-min.js&nq/4854/async-queue/async-queue-min.js&nq/4854/collection/array-extras-min.js&nq/4854/querystring/querystring-parse-simple-min.js&nq/4854/querystring/querystring-stringify-simple-min.js&nq/4854/loader/loader-min.js*xframePath=http://mail.yimg.com/pd/2.21.0.16950/yim/build/p/xframe.js -->
<html class="yui3-js-enabled"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script src="combo(1)" type="text/javascript"></script><script id="yui_3_2_0_1_134096122496410" type="text/javascript" charset="utf-8" src="xframe.js"></script></head>
<body>
<script type="text/javascript">

    function validateUrl(url, whitelist) {
        var i, regExp;
        // Validate against our whitelist
        for (i = 0; i < whitelist.length; i++) {
            regExp = new RegExp("^http[s]?://[a-z0-9\-\.]*" + whitelist[i] + "/", "i");
            if (url.match(regExp)) {
                return true;
            }
        }
        return false;
    }
    
    // We need to determine where the build is located based on our URL, then we can load the xframe JS file and instantiate our XFrame object
    var pathPos = location.href.indexOf("xframePath="),
        yuiPathPos = location.href.indexOf("y="),
        yuiPath, xframePath, xframe, i,
        scriptNode, _loaded = false,
        xframeDomainWhitelist = [
            "s\\.yimg\\.com",                     
            "mail\\.yimg\\.com",
            "yahoo\\.com"
        ],
        yuiDomainWhitelist = [
            "yui\\.yahooapis\\.com"                      
        ]; 
    if (pathPos != -1) {
        xframePath = location.href.substring(pathPos + 11);
        if (!validateUrl(xframePath, xframeDomainWhitelist)) {
            throw new Error("Invalid Xframe Path");
        }

    }
    if (yuiPathPos != -1) {
        yuiPath = location.href.substring(yuiPathPos + 2, location.href.indexOf("*", yuiPathPos));
        if (!validateUrl(yuiPath, xframeDomainWhitelist.concat(yuiDomainWhitelist))) {
            throw new Error("Invalid YUI Path");
        }
    }

    if (yuiPath && xframePath) {
        // Create a script tag 
        scriptNode = document.createElement("script");
        scriptNode.src = yuiPath;
        scriptNode.type = "text/javascript";
        function yuiLoaded() {
            // Set the flag indicating that we've been invoked
            _loaded = true;
            
            // Our YUI dependencies are loaded, now load xframe
            YUI().use("*", function(Y) {
                Y.Get.script(xframePath, {
                    onSuccess: function(o) {
                        Y.use("xframe", function(Y) {
                            xframe = new Y.Messenger.Xframe({isProxy: true});
                        });
                    },
                    onFailure: function(o) {
                        Y.log("Failed trying to load xframe.js from URL: " + xframePath, "error", "xframe-proxy.html");
                    }
        
                });
            });
        }
        scriptNode.onreadystatechange= function () {
            if (!_loaded && (this.readyState == 'complete' || this.readyState == 'loaded') && YUI) {
                yuiLoaded();
            }
        };
        scriptNode.onload = yuiLoaded;
        
        document.getElementsByTagName("head")[0].appendChild(scriptNode);
        
    }
</script>

</body></html>